<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                xmlns:fluentControl="clr-namespace:Calc.View.FluentControl" 
                xmlns:animations="clr-namespace:Calc.View.FluentControl.Animations">
    
    <!-- based on https://github.com/sourcechord/FluentWPF -->

    <fluentControl:RelativePositionConverter x:Key="relativePositionConverter" />

    <Style x:Key="ButtonRevealStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="#00808080" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <!--Setter Property="UseLayoutRounding" Value="True" /-->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root" Background="{TemplateBinding Background}">
                        
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                               
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="backgroundBorder" To="0" Duration="0:0:0.600">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="backgroundBorder" To="0.5" Duration="0:0:0.600">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                
                                <VisualState x:Name="Pressed">
                                    <Storyboard>

                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="backgroundBorder" To="0.5" Duration="0:0:0.600">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hoverLight" To="0" Duration="0:0:0.100">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressLight" To="1" Duration="0:0:0.100">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation Storyboard.TargetProperty="(RadialGradientBrush.RadiusX)" Storyboard.TargetName="brush" From="100" To="50" Duration="0:0:0.300">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation Storyboard.TargetProperty="(RadialGradientBrush.RadiusX)" Storyboard.TargetName="brush" To="500" BeginTime="0:0:0.500" Duration="0:0:4.000">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation Storyboard.TargetProperty="(RadialGradientBrush.RadiusY)" Storyboard.TargetName="brush" From="100" To="50" Duration="0:0:0.300">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation Storyboard.TargetProperty="(RadialGradientBrush.RadiusY)" Storyboard.TargetName="brush" To="500" BeginTime="0:0:0.500" Duration="0:0:4.000">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="brush" To="0" BeginTime="0:0:0.500" Duration="0:0:4.000">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                    </Storyboard>
                                </VisualState>
                                
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        
                                        <animations:BrushAnimation Storyboard.TargetProperty="(TextElement.Foreground)" Storyboard.TargetName="contentPresenter" Duration="0:0:0.100" AutoReverse="False">
                                            <animations:BrushAnimation.To>
                                                <SolidColorBrush Color="#FF838383" />
                                            </animations:BrushAnimation.To>
                                            <animations:BrushAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut" />
                                            </animations:BrushAnimation.EasingFunction>
                                        </animations:BrushAnimation>
                                        
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="border" To="0" Duration="0:0:0.100" AutoReverse="False">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="backgroundBorder" Opacity="0">
                            <Grid ClipToBounds="True">
                                <Border x:Name="hoverLight" Background="{fluentControl:RevealBrush Color=White, Size=100, Opacity=0.9}" />
                                <Rectangle x:Name="pressLight" Opacity="0">
                                    <Rectangle.Fill>
                                        <RadialGradientBrush x:Name="brush" MappingMode="Absolute" RadiusY="5" RadiusX="5">
                                            <RadialGradientBrush.Center>
                                                <MultiBinding Converter="{StaticResource relativePositionConverter}">
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(fluentControl:PointerTracker.RootObject)" />
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" /> 
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(fluentControl:PointerTracker.Position)" />
                                                </MultiBinding>
                                            </RadialGradientBrush.Center>
                                            <RadialGradientBrush.GradientOrigin>
                                                <MultiBinding Converter="{StaticResource relativePositionConverter}">
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(fluentControl:PointerTracker.RootObject)" />
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" />
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(fluentControl:PointerTracker.Position)" />
                                                </MultiBinding>
                                            </RadialGradientBrush.GradientOrigin>
                                            <GradientStop Color="Transparent" Offset="0" />
                                            <GradientStop Color="#88FFFFFF" Offset="0.5" />
                                            <GradientStop Color="Transparent" Offset="1" />
                                        </RadialGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                        </Border>

                        <!-- Content -->
                        <Border BorderBrush="{x:Null}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>

                        <!-- MouseOver border -->
                        <Border x:Name="border" BorderBrush="{fluentControl:RevealBrush Color=White, Size=90, Opacity=0.7}" BorderThickness="{TemplateBinding BorderThickness}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="root" Property="Background" Value="#785D5D5D" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>